This file is part of MXE.
See index.html for further information.

Contains ad hoc patches for cross building.

From c647c6d3197d25c349bb717b5e3d904af5cfa97b Mon Sep 17 00:00:00 2001
From: MXE
Date: Wed, 27 May 2015 00:09:59 +0300
Subject: [PATCH] remove IF(WIN32) conditional block that was causing trouble
 find libraries.


diff --git a/CMake/3rdparty.cmake b/CMake/3rdparty.cmake
index 9fcca77..9c4b358 100755
--- a/CMake/3rdparty.cmake
+++ b/CMake/3rdparty.cmake
@@ -1,146 +1,3 @@
-IF(WIN32)
-
-  # For Windows, we don't used FIND_PACKAGE because DCMTK usually is used with its
-  # own set of 3rd-party support libraries that can be downloaded from DCMTK's
-  # website (pre-built).
-
-  # libxml support: find out whether user has library
-  GET_FILENAME_COMPONENT(LIBXML_DIR "${DCMTK_SOURCE_DIR}/../libxml2-2.7.7" ABSOLUTE)
-  FIND_PATH(WITH_LIBXMLINC "/include/libxml/parser.h" "${LIBXML_DIR}" NO_DEFAULT_PATH)
-
-  # libpng support: find out whether user has library
-  GET_FILENAME_COMPONENT(LIBPNG_DIR "${DCMTK_SOURCE_DIR}/../libpng-1.4.2" ABSOLUTE)
-  FIND_PATH(WITH_LIBPNGINC "include/png.h" "${LIBPNG_DIR}" NO_DEFAULT_PATH)
-
-  # libtiff support: find out whether user has library
-  GET_FILENAME_COMPONENT(LIBTIFF_DIR "${DCMTK_SOURCE_DIR}/../tiff-3.9.2" ABSOLUTE)
-  FIND_PATH(WITH_LIBTIFFINC "include/tiff.h" "${LIBTIFF_DIR}" NO_DEFAULT_PATH)
-
-  # OpenSSL support: find out whether user has library
-  GET_FILENAME_COMPONENT(OPENSSL_DIR "${DCMTK_SOURCE_DIR}/../openssl-1.0.0" ABSOLUTE)
-  FIND_PATH(WITH_OPENSSLINC "include/openssl/ssl.h" "${OPENSSL_DIR}" NO_DEFAULT_PATH)
-
-  # zlib support: find out whether user has library
-  GET_FILENAME_COMPONENT(ZLIB_DIR "${DCMTK_SOURCE_DIR}/../zlib-1.2.5" ABSOLUTE)
-  FIND_PATH(WITH_ZLIBINC "include/zlib.h" "${ZLIB_DIR}" NO_DEFAULT_PATH)
-
-  # sndfile support: find out whether user has library. Needed for module dcmwave (not in public DCMTK yet, marked as advanced)
-  GET_FILENAME_COMPONENT(SNDFILE_DIR "${DCMTK_SOURCE_DIR}/../libsndfile-1.0.17" ABSOLUTE)
-  FIND_PATH(WITH_SNDFILEINC "sndfile.h" "${SNDFILE_DIR}" NO_DEFAULT_PATH)
-  MARK_AS_ADVANCED(SNDFILE_DIR WITH_SNDFILEINC)
-
-  # libiconv support: find out whether user has library
-  GET_FILENAME_COMPONENT(LIBICONV_DIR "${DCMTK_SOURCE_DIR}/../libiconv-1.14" ABSOLUTE)
-  FIND_PATH(WITH_LIBICONVINC "include/iconv.h" "${LIBICONV_DIR}" NO_DEFAULT_PATH)
-
-  # libxml support: configure compiler
-  IF(DCMTK_WITH_XML)
-    IF(WITH_LIBXMLINC)
-      SET(LIBXML_INCDIR ${WITH_LIBXMLINC}/include)
-      SET(LIBXML_LIBDIR ${WITH_LIBXMLINC}/lib)
-      SET(LIBXML_LIBS debug ${LIBXML_LIBDIR}/libxml2_d.lib optimized ${LIBXML_LIBDIR}/libxml2_o.lib debug ${LIBXML_LIBDIR}/iconv_d.lib optimized ${LIBXML_LIBDIR}/iconv_o.lib)
-      MESSAGE(STATUS "Info: DCMTK XML support will be enabled")
-      SET(WITH_LIBXML 1)
-    ELSE(WITH_LIBXMLINC) # turn off library if library path not set
-      MESSAGE(STATUS "Warning: XML support will be disabled because libxml2 directory is not specified. Correct path and re-enable DCMTK_WITH_XML.")
-      SET(DCMTK_WITH_XML OFF CACHE BOOL "" FORCE)
-      SET(WITH_LIBXML "")
-    ENDIF(WITH_LIBXMLINC)
-  ENDIF(DCMTK_WITH_XML)
-
-  # libpng support: configure compiler
-  IF(DCMTK_WITH_PNG)
-    IF(WITH_LIBPNGINC)
-      SET(LIBPNG_INCDIR ${WITH_LIBPNGINC}/include)
-      SET(LIBPNG_LIBDIR ${WITH_LIBPNGINC}/lib)
-      SET(LIBPNG_LIBS debug ${LIBPNG_LIBDIR}/libpng_d.lib optimized ${LIBPNG_LIBDIR}/libpng_o.lib)
-      MESSAGE(STATUS "Info: DCMTK PNG support will be enabled")
-      SET(WITH_LIBPNG 1)
-    ELSE(WITH_LIBPNGINC) # turn off library if library path not set
-      MESSAGE(STATUS "Warning: PNG support will be disabled because libpng directory was not specified. Correct path and re-enable DCMTK_WITH_PNG.")
-      SET(DCMTK_WITH_PNG OFF CACHE BOOL "" FORCE)
-      SET(WITH_LIBPNG "")
-    ENDIF(WITH_LIBPNGINC)
-  ENDIF(DCMTK_WITH_PNG)
-
-  # libtiff support: configure compiler
-  IF(DCMTK_WITH_TIFF)
-    IF(WITH_LIBTIFFINC)
-      SET(LIBTIFF_INCDIR ${WITH_LIBTIFFINC}/include)
-      SET(LIBTIFF_LIBDIR ${WITH_LIBTIFFINC}/lib)
-      SET(LIBTIFF_LIBS debug ${LIBTIFF_LIBDIR}/libtiff_d.lib optimized ${LIBTIFF_LIBDIR}/libtiff_o.lib)
-      MESSAGE(STATUS "Info: DCMTK TIFF support will be enabled")
-      SET(WITH_LIBTIFF 1)
-    ELSE(WITH_LIBTIFFINC) # turn off library if library path not set
-      MESSAGE(STATUS "Warning: TIFF support will be disabled because libtiff directory was not specified. Correct path and re-enable DCMTK_WITH_TIFF.")
-      SET(DCMTK_WITH_TIFF OFF CACHE BOOL "" FORCE)
-      SET(WITH_LIBTIFF "")
-    ENDIF(WITH_LIBTIFFINC)
-  ENDIF(DCMTK_WITH_TIFF)
-
-  # OpenSSL support: configure compiler
-  IF(DCMTK_WITH_OPENSSL)
-    IF(WITH_OPENSSLINC)
-      SET(OPENSSL_BINDIR ${WITH_OPENSSLINC}/bin)
-      SET(OPENSSL_INCDIR ${WITH_OPENSSLINC}/include)
-      SET(OPENSSL_LIBDIR ${WITH_OPENSSLINC}/lib)
-      SET(OPENSSL_LIBS debug ${OPENSSL_LIBDIR}/dcmtkssl_d.lib optimized ${OPENSSL_LIBDIR}/dcmtkssl_o.lib debug ${OPENSSL_LIBDIR}/dcmtkeay_d.lib optimized ${OPENSSL_LIBDIR}/dcmtkeay_o.lib)
-      MESSAGE(STATUS "Info: DCMTK OPENSSL support will be enabled")
-      SET(WITH_OPENSSL 1)
-    ELSE(WITH_OPENSSLINC) # turn off library if library path not set
-      MESSAGE(STATUS "Warning: OPENSSL support will be disabled because openssl directory was not specified. Correct path and re-enable DCMTK_WITH_OPENSSL.")
-      SET(DCMTK_WITH_OPENSSL OFF CACHE BOOL "" FORCE)
-      SET(WITH_OPENSSL "")
-    ENDIF(WITH_OPENSSLINC)
-  ENDIF(DCMTK_WITH_OPENSSL)
-
-  # zlib support: configure compiler
-  IF(DCMTK_WITH_ZLIB)
-    IF(WITH_ZLIBINC)
-      SET(ZLIB_INCDIR ${WITH_ZLIBINC}/include)
-      SET(ZLIB_LIBDIR ${WITH_ZLIBINC}/lib)
-      SET(ZLIB_LIBS debug ${ZLIB_LIBDIR}/zlib_d.lib optimized ${ZLIB_LIBDIR}/zlib_o.lib)
-      MESSAGE(STATUS "Info: DCMTK ZLIB support will be enabled")
-      SET(WITH_ZLIB 1)
-    ELSE(WITH_ZLIBINC) # turn off library if library path not set
-      MESSAGE(STATUS "Warning: ZLIB support will be disabled because zlib directory was not specified. Correct path and re-enable DCMTK_WITH_ZLIB.")
-      SET(DCMTK_WITH_ZLIB OFF CACHE BOOL "" FORCE)
-      SET(WITH_ZLIB "")
-    ENDIF(WITH_ZLIBINC)
-  ENDIF(DCMTK_WITH_ZLIB)
-
-  # sndfile support: configure compiler
-  IF(DCMTK_WITH_SNDFILE)
-    IF(WITH_SNDFILEINC)
-      SET(SNDFILE_INCDIR ${WITH_SNDFILEINC}/include)
-      SET(SNDFILE_LIBDIR ${WITH_SNDFILEINC}/lib)
-      SET(SNDFILE_LIBS debug ${SNDFILE_LIBDIR}/libsndfile_d.lib optimized ${SNDFILE_LIBDIR}/libsndfile_o.lib)
-      MESSAGE(STATUS "Info: DCMTK SNDFILE support will be enabled")
-      SET(WITH_SNDFILE 1)
-    ELSE(WITH_SNDFILEINC) # turn off library if library path not set
-      MESSAGE(STATUS "Warning: SNDFILE support will be disabled because libsndfile directory was not specified. Correct path and re-enable DCMTK_WITH_SNDFILE.")
-      SET(DCMTK_WITH_SNDFILE OFF CACHE BOOL "" FORCE)
-      SET(WITH_SNDFILE "")
-    ENDIF(WITH_SNDFILEINC)
-  ENDIF(DCMTK_WITH_SNDFILE)
-
-  # libiconv support: configure compiler
-  IF(DCMTK_WITH_ICONV)
-    IF(WITH_LIBICONVINC)
-      SET(LIBICONV_INCDIR ${WITH_LIBICONVINC}/include)
-      SET(LIBICONV_LIBDIR ${WITH_LIBICONVINC}/lib)
-      SET(LIBICONV_LIBS debug ${LIBICONV_LIBDIR}/libiconv_d.lib optimized ${LIBICONV_LIBDIR}/libiconv_o.lib)
-      MESSAGE(STATUS "Info: DCMTK ICONV support will be enabled")
-      SET(WITH_LIBICONV 1)
-    ELSE(WITH_LIBICONVINC) # turn off library if library path not set
-      MESSAGE(STATUS "Warning: ICONV support will be disabled because libiconv directory was not specified. Correct path and re-enable DCMTK_WITH_ICONV.")
-      SET(DCMTK_WITH_ICONV OFF CACHE BOOL "" FORCE)
-      SET(WITH_LIBICONV "")
-    ENDIF(WITH_LIBICONVINC)
-  ENDIF(DCMTK_WITH_ICONV)
-
-ELSE(WIN32)
-
   # Find TIFF
   IF(DCMTK_WITH_TIFF)
     FIND_PACKAGE(TIFF QUIET)
@@ -267,8 +124,6 @@ ELSE(WIN32)
     ENDIF(NOT WRAP_FOUND)
   ENDIF(DCMTK_WITH_WRAP)
 
-ENDIF()
-
 # Find doxygen
 IF(DCMTK_WITH_DOXYGEN)
   FIND_PACKAGE(Doxygen QUIET) # will set variable DOXYGEN_EXECUTABLE
-- 
1.9.1

