This file is part of MXE.
See index.html for further information.

Contains ad hoc patches for cross building.

From f038d067533491212304aa33f2ed3b2713a06a7a Mon Sep 17 00:00:00 2001
From: MXE
Date: Fri, 5 Jun 2015 18:34:38 +0300
Subject: [PATCH] update tg_nodes for usage with CGAL 4.5, fetched from:
 https://sourceforge.net/p/flightgear/mailman/message/33265201/


diff --git a/src/Lib/terragear/tg_nodes.cxx b/src/Lib/terragear/tg_nodes.cxx
index 54b4970..cd91beb 100644
--- a/src/Lib/terragear/tg_nodes.cxx
+++ b/src/Lib/terragear/tg_nodes.cxx
@@ -81,9 +81,11 @@ bool TGNodes::get_geod_edge( const SGBucket& b, std::vector<SGGeod>& north, std:
 // Three dimensional queries is a bit overkill, but the code, although faster, is slightly more cumbersome
 
 // get function for the property map - needed for cgal trait extension
+#if 0
 My_point_property_map::reference get(My_point_property_map, My_point_property_map::key_type p) {
     return boost::get<0>(p);
 }
+#endif
 
 // Build the k-d tree
 void TGNodes::init_spacial_query( void )
@@ -340,4 +342,4 @@ void TGNodes::SaveToGzFile( gzFile& fp )
 void TGNodes::LoadFromGzFile( gzFile& fp )
 {
     tg_node_list.LoadFromGzFile( fp );
-}
\ No newline at end of file
+}
diff --git a/src/Lib/terragear/tg_nodes.hxx b/src/Lib/terragear/tg_nodes.hxx
index 0e21713..83f8592 100644
--- a/src/Lib/terragear/tg_nodes.hxx
+++ b/src/Lib/terragear/tg_nodes.hxx
@@ -20,17 +20,19 @@ typedef Kernel::Point_2 tgn_Point;
 typedef boost::tuple<tgn_Point, double> Point_and_Elevation;
 
 //definition of the property map
+#if 0
 struct My_point_property_map{
   typedef tgn_Point value_type;
   typedef const value_type& reference;
   typedef const Point_and_Elevation& key_type;
   typedef boost::readable_property_map_tag category;
 };
+#endif
 
 //typedef CGAL::Search_traits_2<Kernel> Traits;
 typedef CGAL::Search_traits_2<Kernel> Traits_base;
-typedef CGAL::Search_traits_adapter<Point_and_Elevation, My_point_property_map, Traits_base> Traits;
-
+//typedef CGAL::Search_traits_adapter<Point_and_Elevation, My_point_property_map, Traits_base> Traits;
+typedef CGAL::Search_traits_adapter<Point_and_Elevation,CGAL::Nth_of_tuple_property_map<0, Point_and_Elevation>,Traits_base>    Traits;
 typedef CGAL::Fuzzy_iso_box<Traits> Fuzzy_bb;
 typedef CGAL::Kd_tree<Traits> Tree;
 
-- 
1.9.1

